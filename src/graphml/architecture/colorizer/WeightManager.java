/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package graphml.architecture.colorizer;

import graphml.architecture.common.Constants;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import org.gephi.data.attributes.api.AttributeColumn;
import org.gephi.data.attributes.api.AttributeController;
import org.gephi.data.attributes.api.AttributeModel;
import org.gephi.data.attributes.api.AttributeType;
import org.gephi.graph.api.Edge;
import org.gephi.graph.api.GraphController;
import org.gephi.graph.api.GraphModel;
import org.openide.util.Lookup;

/**
 * This class is responsible for the WeightManager UI and interaction
 * (Parts of this class are generated automatically by NetBeans and therewith don't contain Javadoc-Code)
 * @author Thomas Stocker
 */
public class WeightManager extends javax.swing.JFrame {
    
    // attributes
    private final AttributeModel attrModel;
    private final GraphModel graphModel;
    private final DefaultListModel<String> attributeListModel = new DefaultListModel<String>();
    private final DefaultListModel<Double> weightListModel = new DefaultListModel<Double>();

    /**
     * Constructor creates new frame "Colorizer"
     */
    public WeightManager() {
        this.attrModel = Lookup.getDefault().lookup(AttributeController.class).getModel();
        this.graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();
        
        initComponents();
        
        // init dropdown
        AttributeColumn[] columns = attrModel.getEdgeTable().getColumns();
        
        // get relevant columns
        int count = 0;
        for (AttributeColumn column : columns) {
            if (column.getType() == AttributeType.STRING) {
                count++;
            }
        }
        
        // add columns
        String[] s = new String[count];
        count = 0;
        for (AttributeColumn column : columns) {
            if (column.getType() == AttributeType.STRING) {
                s[count++] = column.getTitle();
            }
        }
        cbAttributes.setModel(new javax.swing.DefaultComboBoxModel<String>(s));
        
        jList1.setModel(attributeListModel);
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jList1.setEnabled(false);
        listAssignedValues.setModel(weightListModel);
        listAssignedValues.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        listAssignedValues.setEnabled(true);
        
        this.setVisible(true);

        cbAttributesActionPerformed(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbAttributes = new javax.swing.JComboBox<String>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<String>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listAssignedValues = new javax.swing.JList<Double>();
        bSetWeight = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cbAttributes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAttributesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(WeightManager.class, "WeightManager.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(WeightManager.class, "WeightManager.jLabel2.text")); // NOI18N

        jScrollPane1.setEnabled(false);

        jList1.setBackground(new java.awt.Color(234, 234, 234));
        jList1.setToolTipText(org.openide.util.NbBundle.getMessage(WeightManager.class, "WeightManager.jList1.toolTipText")); // NOI18N
        jList1.setEnabled(false);
        jScrollPane1.setViewportView(jList1);

        listAssignedValues.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAssignedValuesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listAssignedValues);

        org.openide.awt.Mnemonics.setLocalizedText(bSetWeight, org.openide.util.NbBundle.getMessage(WeightManager.class, "WeightManager.bSetWeight.text")); // NOI18N
        bSetWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSetWeightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(cbAttributes, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(bSetWeight)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cbAttributes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bSetWeight)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method reacts on the event of a change of the checkbox
     * @param evt ActionEvent (unused)
     */
    private void cbAttributesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAttributesActionPerformed
        // go through all nodes and put values into combobox
        Edge[] edges = graphModel.getUndirectedGraph().getEdges().toArray();

        attributeListModel.clear();
        weightListModel.clear();
        
        for(Edge e : edges) {
            if(e.getAttributes().getValue(cbAttributes.getSelectedItem().toString()) != null && checkIfNotInListModel((String) e.getAttributes().getValue(cbAttributes.getSelectedItem().toString()), attributeListModel))
            {
                attributeListModel.addElement((String) e.getAttributes().getValue(cbAttributes.getSelectedItem().toString()));
                weightListModel.addElement(0.0);
            }
        }
    }//GEN-LAST:event_cbAttributesActionPerformed

    /**
     * This method checks, if the given string is already in the listmodel or not
     * @param s string to be checked
     * @param l listModel to be checked if string is in there
     * @return false if string is in listModel, true if not
     */
    private static boolean checkIfNotInListModel(String s, ListModel<String> l) {
        for(int i = 0; i < l.getSize(); i++) {
            if(s.equals(l.getElementAt(i))) return false;
        }
        return true;
    }
 
    /**
     * This method reacts on the action when the button bSetAction is clicked
     * @param evt ActionEvent (unused)
     */
    private void bSetWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSetWeightActionPerformed
        // set weight for all edges
        Edge[] edges = graphModel.getUndirectedGraph().getEdges().toArray();
        String attr;
        
        for(Edge e : edges) {
            attr = (String) e.getAttributes().getValue(cbAttributes.getSelectedItem().toString());
            
            if(attr == null) continue;
            
            // go through JList
            for(int i = 0; i < attributeListModel.getSize(); i++) {
                if(attr.equals(attributeListModel.get(i))) {
                    Double d = weightListModel.get(i);
                    e.getAttributes().setValue(Constants.attrWeight, d);
                    break;
                }
            }
        }
    }//GEN-LAST:event_bSetWeightActionPerformed

    /**
     * This method reacts on a double click on the right list
     * @param evt MouseEvent from Click
     */
    private void listAssignedValuesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAssignedValuesMouseClicked
        // get double click
         if(evt.getClickCount() == 2) {
             int index = listAssignedValues.getSelectedIndex();
             
             String result = JOptionPane.showInputDialog(this, "Please input the weight:", "Weight-Input", JOptionPane.QUESTION_MESSAGE);
             
             // get value
             try {
                 result = result.replace(',', '.');
                 Double d = Double.parseDouble(result);
                 weightListModel.set(index, d);
             }
             catch(NumberFormatException e) {
             }
         }
    }//GEN-LAST:event_listAssignedValuesMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bSetWeight;
    private javax.swing.JComboBox<String> cbAttributes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<Double> listAssignedValues;
    // End of variables declaration//GEN-END:variables
}
